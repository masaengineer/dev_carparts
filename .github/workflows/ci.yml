name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]  # mainブランチへのプッシュをトリガーにする
  pull_request:
    branches: [ "main" ]  # mainブランチへのプルリクエストをトリガーにする

# 環境変数をトップレベルで定義
env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  RAILS_ENV: test

jobs:
  test:
    runs-on: ubuntu-latest  # テストジョブは最新のUbuntuで実行
    # ジョブ固有の環境変数が必要な場合はここでも定義可能
    env:
      DATABASE_URL: postgres://postgres:password@db:5432/parts_sync_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # コードをチェックアウトするアクションを使用

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1  # Docker Buildxをセットアップするアクションを使用

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose

      - name: Check Docker Compose version
        run: docker-compose --version

      - name: Check PATH
        run: echo $PATH

      - name: Build and run tests
        run: |
          # 環境変数が正しく設定されているか確認
          echo "Database URL: $DATABASE_URL"

          # Dockerコンテナをビルド
          docker-compose build
          docker-compose run --rm web bash -c "
            # 必要なGemをインストール
            bundle install && \
            # データベースを作成し、スキーマをロード
            bin/rails db:create db:schema:load && \
            # Railsのテストを実行
            bundle exec rails test && \
            # システムテストを実行
            bundle exec rails test:system
          "

  lint:
    runs-on: ubuntu-latest  # リントジョブも最新のUbuntuで実行
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # コードをチェックアウトするアクションを使用

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose

      - name: Check Docker Compose version
        run: docker-compose --version

      - name: Check PATH
        run: echo $PATH

      - name: Build and run linters
        run: |
          docker-compose build
          docker-compose run --rm web bash -c "
            bundle install && \
            bundle binstubs bundler-audit brakeman rubocop && \
            bin/bundler-audit --update && \
            bin/brakeman -q -w2 && \
            bin/rubocop --parallel
          "
